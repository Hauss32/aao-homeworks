{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;;;;;;;;;AC7BA,gBAAgB,mBAAO,EAAE,0CAAY;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,SAAS;AACT;AACA;;AAEA;;;;;;;;;;AC3CA,gBAAgB,mBAAO,CAAC,0CAAY;AACpC,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,UAAU;AACV;AACA;;AAEA;;;;;;UCjDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,EAAE,oDAAiB;AAC/C,oBAAoB,mBAAO,EAAE,kDAAgB;;AAE7C;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,CAAC,C","sources":["./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/users_search.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["const APIUtil = {\n    followUser: id => {\n        return $.ajax({\n            url: `/users/${id}/follow`,\n            type: 'POST',\n            dataType: 'json'\n        });\n    },\n\n    unfollowUser: id => {\n        return $.ajax({\n            url: `/users/${id}/follow`,\n            type: 'DELETE',\n            dataType: 'json'\n        });\n    },\n\n    searchUsers: queryStr => {\n        return $.ajax({\n            url: `/users/search`,\n            type: 'GET',\n            dataType: 'json',\n            data: {\n                query: queryStr\n            }\n        });\n    }\n};\n\nmodule.exports = APIUtil;","const APIUtil = require( './api_util' );\n\nclass FollowToggle {\n    constructor(el, options) {\n        this.$el = $( el );\n        this.userId = this.$el.data( 'user-id' ) || options.userId;\n        this.followState = this.$el.data( 'initial-follow-state' ) || options.followState;\n\n        this.render();\n        this.handleClick();\n    }\n\n    render () {\n        const text = ( this.followState === 'followed') ? 'Unfollow!' : 'Follow!';\n        this.$el.text( text );\n        this.$el.prop( \"disabled\", false );\n    }\n\n    handleClick () {\n        this.$el.on( 'click', event => {\n            event.preventDefault();\n\n            this.$el.prop( \"disabled\", true );\n\n            if( this.followState === 'followed' ) {\n                APIUtil.unfollowUser\n                    .call( this, this.userId )\n                    .then( () => {\n                        this.followState = 'unfollowed';\n                        this.render();\n                } );\n            } else {\n                APIUtil.followUser\n                    .call( this, this.userId )\n                    .then( () => {\n                        this.followState = 'followed' \n                        this.render();\n                } );\n            }\n        })\n    }\n}\n\nmodule.exports = FollowToggle;","const APIUtil = require('./api_util');\nconst FollowToggle = require('./follow_toggle');\n\nclass UsersSearch {\n    constructor(el) {\n        this.$el = $( el );\n        this.$input = this.$el.find( 'input' );\n        this.$ul = this.$el.find('ul.users');\n\n        this.handleInput();\n    }\n\n    render(users) {\n        this.$ul.empty();\n\n        users.forEach( user => {\n            const $listItem = $( '<li></li>');\n            const $listLink = $( '<a></a>' );\n            const linkURL = `/users/${user.id}`;\n            const followBtn = new FollowToggle('<button></button>', {\n                userId: user.id,\n                followState: ( user.followed ) ? 'followed' : 'unfollowed'\n            })\n\n            $listLink.attr(\"href\", linkURL);\n            $listLink.text( user.username );\n\n            $listItem.append( $listLink );\n\n            $listItem.append( followBtn.$el );\n\n            this.$ul.append( $listItem );\n        });\n    }\n\n    handleInput() {\n        const search = this;\n\n        search.$input.on( 'input', function() {\n            const searchStr = search.$input.val();\n\n            APIUtil.searchUsers( searchStr )\n                .then( users => {\n                    search.render( users );\n                })\n        } );\n    }\n}\n\nmodule.exports = UsersSearch;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require( './follow_toggle');\nconst UsersSearch = require( './users_search');\n\n$( () => {\n    const $followBtns = $( 'button.follow-toggle' );\n    $followBtns.each( function() {\n        new FollowToggle( this );\n    })\n\n    const $userSearches = $( 'nav.users-search' );\n    $userSearches.each(function () {\n        new UsersSearch(this);\n    })\n})"],"names":[],"sourceRoot":""}